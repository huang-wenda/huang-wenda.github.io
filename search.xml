<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/huang-wenda.github.io/2018/09/07/hello-world/</url>
    <content><![CDATA[<p>Welcome to my blog.</p>
<p>Here is nothing.</p>
<p>Here will be anything.</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//这是一篇模板文章</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
]]></content>
      <categories>
        <category>类别</category>
      </categories>
      <tags>
        <tag>tags</tag>
      </tags>
  </entry>
  <entry>
    <title>刷题笔记_1662</title>
    <url>/huang-wenda.github.io/2020/12/02/shua-ti-bi-ji-1662/</url>
    <content><![CDATA[<h3 id="刷题笔记-1662-检查两个字符串数组是否相等"><a href="#刷题笔记-1662-检查两个字符串数组是否相等" class="headerlink" title="刷题笔记_1662.检查两个字符串数组是否相等"></a>刷题笔记_1662.<a href="https://leetcode-cn.com/problems/check-if-two-string-arrays-are-equivalent/" target="_blank" rel="noopener">检查两个字符串数组是否相等</a></h3><h6 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路:"></a>解题思路:</h6><p>首先想到的就是将两个字符串数组运用 <em>StringBuffer</em> 进行拼接再用 <em>equals()</em> 进行比较.</p>
<p><strong>注意:</strong> 题目下方的提示,无需考虑数组长度为空或长度超过 <em>1000</em> 的情况.</p>
<p><strong>注意:</strong> <em>StringBuffer</em> 不可直接使用 <em>equals()</em> 进行比较,需要使用 <em>toString()</em></p>
<p><em>String</em> 类中的 <em>equals()</em> 是经过重写的,可以比较两个字符串的内容;</p>
<p>而 <em>StringBuffer</em> 的 <em>equals()</em> 没有进行重写;</p>
<p>实际上调用的是 <em>Object</em> 类的 <em>equals()</em> 也就是直接使用 <em>==</em> 进行比较;</p>
<p>所以会出现值相等而返回 <em>false</em> 的情况<del>白白浪费2次提交</del></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//String类中重写后的equals方法:</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span>Object anObject<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">==</span> anObject<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>anObject <span class="token keyword">instanceof</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            String anotherString <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span>anObject<span class="token punctuation">;</span>
            <span class="token keyword">int</span> n <span class="token operator">=</span> value<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> anotherString<span class="token punctuation">.</span>value<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">char</span> v1<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
                <span class="token keyword">char</span> v2<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> anotherString<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
                <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
                <span class="token keyword">while</span> <span class="token punctuation">(</span>n<span class="token operator">--</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>v1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> v2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
                        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                    i<span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>解题:</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">arrayStringsAreEqual</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> word1<span class="token punctuation">,</span> String<span class="token punctuation">[</span><span class="token punctuation">]</span> word2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> length1 <span class="token operator">=</span> word1<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">int</span> length2 <span class="token operator">=</span> word2<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        StringBuffer sb1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        StringBuffer sb2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>length1 <span class="token operator">>=</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> length2 <span class="token operator">>=</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> length1 <span class="token operator">&lt;=</span> <span class="token number">1000</span> <span class="token operator">&amp;&amp;</span> length2 <span class="token operator">&lt;=</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>length1<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            sb1<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>word1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>length1<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            sb2<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>word1<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>sb1<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>sb2<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>过于繁琐,进行简化:</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">arrayStringsAreEqual</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> word1<span class="token punctuation">,</span> String<span class="token punctuation">[</span><span class="token punctuation">]</span> word2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        StringBuffer sb1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        StringBuffer sb2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span>String w1 <span class="token operator">:</span> word1<span class="token punctuation">)</span><span class="token punctuation">{</span>
            sb1<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>w1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span>String w2 <span class="token operator">:</span> word2<span class="token punctuation">)</span><span class="token punctuation">{</span>
            sb2<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>w2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> sb1<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>sb2<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> 
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>参考解题答案1:</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//使用join方法</span>
<span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">arrayStringsAreEqual</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> word1<span class="token punctuation">,</span> String<span class="token punctuation">[</span><span class="token punctuation">]</span> word2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> String<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> word1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> word2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>参考解题答案2:</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//使用流</span>
<span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">arrayStringsAreEqual</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> word1<span class="token punctuation">,</span> String<span class="token punctuation">[</span><span class="token punctuation">]</span> word2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Stream<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>word1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span>String<span class="token operator">:</span><span class="token operator">:</span>concat<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>Stream<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>word2<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span>String<span class="token operator">:</span><span class="token operator">:</span>concat<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>总结</strong></p>
<p>本题目<del>简直白送</del>相对简单,但是解题过程中仍反应出一些问题:<br>1.审题不够仔细,体现在:题目已明确指出 <em>word1</em> 和 <em>word2</em> 长度均为[1,1000]却依然做了非空以及长度判断(该部分没有体现在上方代码中,但永远留在了提交记录里).<br>2.思路不够清晰,在决定思路后不能流畅的将想法落实于代码,编码过程中多次出现变量名错误等<del>脑瘫</del>问题.<br>3.对流的运用还需要加强.<del>jdk都15了,8还没玩明白,这河里吗???</del></p>
]]></content>
      <tags>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>倒计时</title>
    <url>/huang-wenda.github.io/2020/11/24/dao-ji-shi/</url>
    <content><![CDATA[<h4 id="来到西安的第17天"><a href="#来到西安的第17天" class="headerlink" title="来到西安的第17天"></a>来到西安的第<strong>17</strong>天</h4><p>上周末下雪了，想起去年。</p>
<p>天津。</p>
<p>另一个陌生的城市，离家不远，离北京不远。</p>
<p>周围的环境随着时间而愈加熟悉。</p>
<p>天冷了，供暖了，起霾了，下雪了…</p>
<hr>
<p>一年后的现在。</p>
<p>西安。</p>
<p>我坐在另一个陌生城市的房子里敲下这些字符。</p>
<p>来的时候是深秋，树叶还没落完。</p>
<p>气温是那种多穿一件热少穿一件冷的状态。</p>
<p>虽然周围是陌生的环境。却早就习惯了这个感觉。一切都是新鲜的。</p>
<p>天冷了，供暖了，起霾了，下雪了…</p>
<hr>
<p>在天津的时候，感觉生活望不到边。</p>
<p><strong><em>看脚下一片黑暗，望头顶星光璀璨</em></strong></p>
<p>不知道那种生活要经历多久，第一次作为一家公司的职员站在这个星球上。</p>
<p>内心有所不满，不知何时改变，也不知如何改变。</p>
<p>当时也分析了一下，分析了为什么明明没有上学时累，却在下班后什么都不想做。</p>
<p>可能是因为上班的日子没有盼头吧，上学终有毕业的那一天，再累也会结束。</p>
<p>上班就，不知何时是个头，不知这样的日子何时是个头。</p>
<p><strong><em>人生就是等待一个又一个倒计时结束</em></strong></p>
<p>工作日每天数着还有几天到周末，还有几天发工资，还有几天到下一个法定节假日…</p>
<p>不知什么时候结束，渐渐忘了哪天开始这样的日子。</p>
<hr>
<p>今天，似乎又站在了一个倒计时上。</p>
<p>一样的期待着周末，期待着工资，期待着假期…</p>
<p>只是现在知道大概何时结束，也记得什么时候开始。</p>
<p>但难以自律，忍不住浪费时间，即使知道尽头，也没法在下班过后保持精力和热情。</p>
<p>做过各种尝试，尝试保持，想想明天，想想未来。</p>
<p>人类对于宇宙不过尘埃，此刻对于寿命也不过瞬间。</p>
<p>如此，人类也从未停止对世界的探索，</p>
<p>就像我从未停止尝试抓住空闲的时间，</p>
<p>用空闲的时间来准备，</p>
<p>准备逃跑计划。</p>
<p>逃到另一个全新的环境，全新的世界。</p>
<p><strong><em>盼暖春来</em></strong></p>
<p><em>每年寒冬深夜时漫天飞雪</em></p>
<p><em>深秋时节飘落叶昏黄漫天</em></p>
<p><em>夏日炎炎时我也没了直觉</em></p>
<p><del><em>只盼来年春暖花开时 我真能有改变</em></del></p>
<p><em>只盼来年暖春时节鲜花 开遍漫山野</em></p>
]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>碎语</tag>
      </tags>
  </entry>
</search>
